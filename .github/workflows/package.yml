name: Package ably
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Ably version'
        required: true

jobs:
  package-library:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with: 
          submodules: 'recursive'
      - name: Download dotnet framework
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Download fake-cli
        run:  dotnet tool install fake-cli --version 5.20.4 --tool-path .
      - name: Package
        run: ./package.cmd ${{ github.event.inputs.version }}
      - name: Archive package
        uses: actions/upload-artifact@v2
        with:
          name: output-package
          path: |
            ${{ github.workspace }}/*.nupkg

  package-push:
    runs-on: macos-latest
    env:
      DOTNET_NOLOGO: true

    steps:
      - uses: actions/checkout@v2
        with: 
          submodules: 'recursive'
      - name: Download dotnet framework
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Download fake-cli
        run:  dotnet tool install fake-cli --version 5.20.4 --tool-path .
      - name: Restore packages
        run: |
          nuget restore ./src/IO.Ably.Xamarin.sln
      - name: Package 
        run: ./package-push.sh ${{ github.event.inputs.version }}
      - name: Archive package
        uses: actions/upload-artifact@v2
        with:
          name: output-package
          path: |
            ${{ github.workspace }}/*.nupkg

  package-unity:
    env:
      package_path: "./artifacts/ably.io.${{ github.event.inputs.version }}.unitypackage"
    runs-on: ubuntu-latest
    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v3
        - name: Download dotnet framework
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: '2.x.x'

        # Install the packager. We are putting it outside the working directory so we dont include it by mistake
        - name: Install Unity Packager
          run: |
            git clone -b v1 https://github.com/ably-labs/unity-packager
            mkdir artifacts
        
        # Pack the assets
        - name: Package Project
          run: |
            echo "Creating package ${{env.package_path}}"
            dotnet run --project unity-packager/UnityPackageExporter/UnityPackageExporter.csproj -project unity -output ${{env.package_path}} -dir Assets/Ably
        
        # Upload artifact
        - name: Upload Artifact
          uses: actions/upload-artifact@v2
          with:
            name: output-package
            path: ${{env.package_path}}
